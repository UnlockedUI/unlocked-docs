import{c as n}from"./app.1f878fcd.js";import{_ as a}from"./plugin-vue_export-helper.21dcd24c.js";const s={},e=n(`<h1 id="creating-a-theme" tabindex="-1"><a class="header-anchor" href="#creating-a-theme" aria-hidden="true">#</a> Creating a theme</h1><p>Creating a new theme is straight forward with Unlocked. Create a new typescript file that will export your new theme object.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">const</span> exampleTheme <span class="token operator">=</span> <span class="token punctuation">{</span> 
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>Now where you&#39;re registering Unlocked, make sure you pass your new theme in as an option.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> unlockedModular <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@unlocked/foundation&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> customTheme <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./customTheme&#39;</span>

<span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">createApp</span><span class="token punctuation">(</span>App<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>unlockedGlobal<span class="token punctuation">,</span> <span class="token punctuation">{</span> 
  <span class="token literal-property property">theme</span><span class="token operator">:</span> customTheme
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="overriding-a-component" tabindex="-1"><a class="header-anchor" href="#overriding-a-component" aria-hidden="true">#</a> Overriding a component</h2><p>To override a single component, create a new theme object as shown above, spread the defaultTheme into your new theme object, and override as you see fit.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> defaultTheme <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@unlocked/foundation&#39;</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> exampleTheme <span class="token operator">=</span> <span class="token punctuation">{</span> 
 <span class="token operator">...</span>defaulTheme<span class="token punctuation">,</span>
 <span class="token literal-property property">button</span><span class="token operator">:</span> <span class="token punctuation">{</span> 
   <span class="token operator">...</span>defaultTheme<span class="token punctuation">.</span>button<span class="token punctuation">,</span>
   <span class="token literal-property property">variants</span><span class="token operator">:</span> <span class="token punctuation">{</span>
     <span class="token operator">...</span>defaultTheme<span class="token punctuation">.</span>button<span class="token punctuation">.</span>variants
     <span class="token literal-property property">warning</span><span class="token operator">:</span> <span class="token string">&#39;text-black&#39;</span>
   <span class="token punctuation">}</span>
 <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h2 id="tree-shaking" tabindex="-1"><a class="header-anchor" href="#tree-shaking" aria-hidden="true">#</a> Tree-shaking</h2><p>Unfortunately our theming system isn&#39;t yet treeshakable. If you&#39;re concious of bundle sizing and are only making use of a few components, we&#39;ve made individual class objects available to import so you can construct a new, minimised theme for your application.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> buttonTheme <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@unlocked/foundation&#39;</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> exampleTheme <span class="token operator">=</span> <span class="token punctuation">{</span> 
 <span class="token operator">...</span>buttonTheme
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div>`,11);function p(t,o){return e}var l=a(s,[["render",p]]);export{l as default};
